
Rebarscope_Tiny.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ea  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000013e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000013e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000170  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000893  00000000  00000000  000001cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004be  00000000  00000000  00000a5f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003d2  00000000  00000000  00000f1d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000012f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000030c  00000000  00000000  00001314  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002ca  00000000  00000000  00001620  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000018ea  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	10 c0       	rjmp	.+32     	; 0x22 <__ctors_end>
   2:	17 c0       	rjmp	.+46     	; 0x32 <__bad_interrupt>
   4:	16 c0       	rjmp	.+44     	; 0x32 <__bad_interrupt>
   6:	15 c0       	rjmp	.+42     	; 0x32 <__bad_interrupt>
   8:	14 c0       	rjmp	.+40     	; 0x32 <__bad_interrupt>
   a:	13 c0       	rjmp	.+38     	; 0x32 <__bad_interrupt>
   c:	12 c0       	rjmp	.+36     	; 0x32 <__bad_interrupt>
   e:	11 c0       	rjmp	.+34     	; 0x32 <__bad_interrupt>
  10:	10 c0       	rjmp	.+32     	; 0x32 <__bad_interrupt>
  12:	0f c0       	rjmp	.+30     	; 0x32 <__bad_interrupt>
  14:	0e c0       	rjmp	.+28     	; 0x32 <__bad_interrupt>
  16:	0d c0       	rjmp	.+26     	; 0x32 <__bad_interrupt>
  18:	0c c0       	rjmp	.+24     	; 0x32 <__bad_interrupt>
  1a:	0b c0       	rjmp	.+22     	; 0x32 <__bad_interrupt>
  1c:	0a c0       	rjmp	.+20     	; 0x32 <__bad_interrupt>
  1e:	09 c0       	rjmp	.+18     	; 0x32 <__bad_interrupt>
  20:	08 c0       	rjmp	.+16     	; 0x32 <__bad_interrupt>

00000022 <__ctors_end>:
  22:	11 24       	eor	r1, r1
  24:	1f be       	out	0x3f, r1	; 63
  26:	cf e5       	ldi	r28, 0x5F	; 95
  28:	d2 e0       	ldi	r29, 0x02	; 2
  2a:	de bf       	out	0x3e, r29	; 62
  2c:	cd bf       	out	0x3d, r28	; 61
  2e:	02 d0       	rcall	.+4      	; 0x34 <main>
  30:	5a c0       	rjmp	.+180    	; 0xe6 <_exit>

00000032 <__bad_interrupt>:
  32:	e6 cf       	rjmp	.-52     	; 0x0 <__vectors>

00000034 <main>:
#define DT4		 43.0 //
//#define W6_TiME  1   //place holder

int main(void)
{
	DDRB |= 0x0F; //set ports to outputs
  34:	87 b3       	in	r24, 0x17	; 23
  36:	8f 60       	ori	r24, 0x0F	; 15
  38:	87 bb       	out	0x17, r24	; 23
	DDRA |= 0xFF;
  3a:	8a b3       	in	r24, 0x1a	; 26
  3c:	8f ef       	ldi	r24, 0xFF	; 255
  3e:	8a bb       	out	0x1a, r24	; 26

	/* Replace with your application code */
	while (1)
	{
		SETBIT( PORTB, W6 );
  40:	c1 9a       	sbi	0x18, 1	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  42:	83 e0       	ldi	r24, 0x03	; 3
  44:	8a 95       	dec	r24
  46:	f1 f7       	brne	.-4      	; 0x44 <__SREG__+0x5>
  48:	00 00       	nop
		_delay_us( W6_TIME );
		SETBIT( PORTA, CD1 );
  4a:	df 9a       	sbi	0x1b, 7	; 27
  4c:	86 e2       	ldi	r24, 0x26	; 38
  4e:	8a 95       	dec	r24
  50:	f1 f7       	brne	.-4      	; 0x4e <__SREG__+0xf>
  52:	00 c0       	rjmp	.+0      	; 0x54 <__SREG__+0x15>
		_delay_us( CD1_TIME );
		CLRBIT( PORTA, CD1 );
  54:	df 98       	cbi	0x1b, 7	; 27
  56:	83 e0       	ldi	r24, 0x03	; 3
  58:	8a 95       	dec	r24
  5a:	f1 f7       	brne	.-4      	; 0x58 <__SREG__+0x19>
  5c:	00 00       	nop
		_delay_us( W6_TIME );
		CLRBIT( PORTB, W6 );
  5e:	c1 98       	cbi	0x18, 1	; 24
  60:	88 e0       	ldi	r24, 0x08	; 8
  62:	8a 95       	dec	r24
  64:	f1 f7       	brne	.-4      	; 0x62 <__SREG__+0x23>
  66:	00 00       	nop

		_delay_us( DT1 );

		SETBIT( PORTA, W1 );
  68:	d8 9a       	sbi	0x1b, 0	; 27
  6a:	87 e1       	ldi	r24, 0x17	; 23
  6c:	8a 95       	dec	r24
  6e:	f1 f7       	brne	.-4      	; 0x6c <__SREG__+0x2d>
  70:	00 c0       	rjmp	.+0      	; 0x72 <__SREG__+0x33>
		_delay_us( W1_TIME );
		CLRBIT( PORTA, W1 );
  72:	d8 98       	cbi	0x1b, 0	; 27
  74:	80 e1       	ldi	r24, 0x10	; 16
  76:	8a 95       	dec	r24
  78:	f1 f7       	brne	.-4      	; 0x76 <__SREG__+0x37>

		_delay_us( DT2 );

		SETBIT( PORTA, W2 );
  7a:	d9 9a       	sbi	0x1b, 1	; 27
  7c:	82 e1       	ldi	r24, 0x12	; 18
  7e:	8a 95       	dec	r24
  80:	f1 f7       	brne	.-4      	; 0x7e <__SREG__+0x3f>
  82:	00 c0       	rjmp	.+0      	; 0x84 <__SREG__+0x45>
		_delay_us( W2_TIME );
		CLRBIT( PORTA, W2 );
  84:	d9 98       	cbi	0x1b, 1	; 27

		SETBIT( PORTB, W5 );
  86:	c0 9a       	sbi	0x18, 0	; 24
  88:	8a e0       	ldi	r24, 0x0A	; 10
  8a:	8a 95       	dec	r24
  8c:	f1 f7       	brne	.-4      	; 0x8a <__SREG__+0x4b>
  8e:	00 c0       	rjmp	.+0      	; 0x90 <__SREG__+0x51>
		_delay_us( W5_TIME );
		CLRBIT( PORTB, W5 );
  90:	c0 98       	cbi	0x18, 0	; 24

		SETBIT( PORTB, W6 );
  92:	c1 9a       	sbi	0x18, 1	; 24
  94:	83 e0       	ldi	r24, 0x03	; 3
  96:	8a 95       	dec	r24
  98:	f1 f7       	brne	.-4      	; 0x96 <__SREG__+0x57>
  9a:	00 00       	nop
		_delay_us( W6_TIME );
		SETBIT( PORTB, CD2 );
  9c:	c2 9a       	sbi	0x18, 2	; 24
  9e:	82 e2       	ldi	r24, 0x22	; 34
  a0:	8a 95       	dec	r24
  a2:	f1 f7       	brne	.-4      	; 0xa0 <__SREG__+0x61>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <__SREG__+0x67>
		_delay_us( CD2_TIME );
		CLRBIT( PORTB, CD2 );
  a6:	c2 98       	cbi	0x18, 2	; 24
  a8:	83 e0       	ldi	r24, 0x03	; 3
  aa:	8a 95       	dec	r24
  ac:	f1 f7       	brne	.-4      	; 0xaa <__SREG__+0x6b>
  ae:	00 00       	nop
		_delay_us( W6_TIME );
		CLRBIT( PORTB, W6 );
  b0:	c1 98       	cbi	0x18, 1	; 24
  b2:	88 e0       	ldi	r24, 0x08	; 8
  b4:	8a 95       	dec	r24
  b6:	f1 f7       	brne	.-4      	; 0xb4 <__SREG__+0x75>
  b8:	00 00       	nop

		_delay_us( DT1 );

		SETBIT( PORTA, W3 );
  ba:	da 9a       	sbi	0x1b, 2	; 27
  bc:	85 e1       	ldi	r24, 0x15	; 21
  be:	8a 95       	dec	r24
  c0:	f1 f7       	brne	.-4      	; 0xbe <__SREG__+0x7f>
		_delay_us( W3_TIME );
		CLRBIT( PORTA, W3 );
  c2:	da 98       	cbi	0x1b, 2	; 27
  c4:	8e e0       	ldi	r24, 0x0E	; 14
  c6:	8a 95       	dec	r24
  c8:	f1 f7       	brne	.-4      	; 0xc6 <__SREG__+0x87>
  ca:	00 00       	nop

		_delay_us( DT4 );

		SETBIT( PORTA, W4 );
  cc:	db 9a       	sbi	0x1b, 3	; 27
  ce:	85 e1       	ldi	r24, 0x15	; 21
  d0:	8a 95       	dec	r24
  d2:	f1 f7       	brne	.-4      	; 0xd0 <__SREG__+0x91>
  d4:	00 00       	nop
		_delay_us( W4_TIME );
		CLRBIT( PORTA, W4 );
  d6:	db 98       	cbi	0x1b, 3	; 27

		SETBIT( PORTB, W5 );
  d8:	c0 9a       	sbi	0x18, 0	; 24
  da:	8a e0       	ldi	r24, 0x0A	; 10
  dc:	8a 95       	dec	r24
  de:	f1 f7       	brne	.-4      	; 0xdc <__SREG__+0x9d>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <__SREG__+0xa3>
		_delay_us( W5_TIME );
		CLRBIT( PORTB, W5 );
  e2:	c0 98       	cbi	0x18, 0	; 24
  e4:	ad cf       	rjmp	.-166    	; 0x40 <__SREG__+0x1>

000000e6 <_exit>:
  e6:	f8 94       	cli

000000e8 <__stop_program>:
  e8:	ff cf       	rjmp	.-2      	; 0xe8 <__stop_program>
